{"version":3,"sources":["helpers/MathHelper.js","helpers/ColorHelper.js","components/PlayNumber.js","components/PlayAgain.js","components/StarsDisplay.js","hooks/useGameState.js","components/Game.js","components/StarMatch.js","App.js","index.js"],"names":["MathHelper","sum","arr","reduce","acc","curr","range","min","max","Array","from","length","_","i","random","Math","floor","randomSumIn","sets","sums","j","len","candidateSet","concat","candidateSum","push","ColorHelper","available","used","wrong","candidate","PlayNumber","props","className","onClick","numberClick","number","status","style","backgroundColor","PlayAgain","color","gameStatus","StarsDisplay","count","map","starId","key","useGameState","React","useState","stars","setStars","availableNums","setAvailableNums","candidateNums","setCandidateNums","secondsLeft","setSecondsLeft","useEffect","timerId","setTimeout","clearTimeout","setGameState","newCandidateNums","newAvailableNums","filter","availableNum","includes","Game","numberStatus","onNumberClick","currentStatus","candidateNum","startNewGame","StarMatch","gameId","setGameId","App","exact","path","render","routerProps","Component","ReactDOM","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.823d666b.chunk.js","sourcesContent":["const MathHelper = {\n  // Sum an array\n  sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\n\n  // create an array of numbers between min and max (edges included)\n  range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\n\n  // pick a random number between min and max (edges included)\n  random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\n\n  // Given an array of numbers and a max...\n  // Pick a random sum (< max) from the set of all available sums in arr\n  randomSumIn: (arr, max) => {\n    const sets = [[]];\n    const sums = [];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0, len = sets.length; j < len; j++) {\n        const candidateSet = sets[j].concat(arr[i]);\n        const candidateSum = MathHelper.sum(candidateSet);\n        if (candidateSum <= max) {\n          sets.push(candidateSet);\n          sums.push(candidateSum);\n        }\n      }\n    }\n    return sums[MathHelper.random(0, sums.length - 1)];\n  },\n}\n\nexport default MathHelper;\n","const ColorHelper = {\n  available: 'lightgray',\n  used: 'lightgreen',\n  wrong: 'lightcoral',\n  candidate: 'deepskyblue',\n}\n\nexport default ColorHelper;\n","import React from 'react';\nimport ColorHelper from '../helpers/ColorHelper'\n\nconst PlayNumber = (props) => (\n  <button\n    className=\"number\"\n    onClick={() => props.numberClick(props.number, props.status)}\n    style={{ backgroundColor: ColorHelper[props.status] }}\n  >\n    {props.number}\n  </button>\n)\n\nexport default PlayNumber;\n","import React from 'react';\n\nconst PlayAgain = (props) => (\n  <div className=\"game-done\">\n    <div className=\"message\" style={{ color:props.gameStatus === 'lost' ? 'red' : 'green' }}>\n      { props.gameStatus === 'lost' ? 'Game Over' : 'Good job!' }\n    </div>\n    <button onClick={props.onClick}>\n      Play again!\n    </button>\n  </div>\n)\n\nexport default PlayAgain;\n","import React from 'react';\nimport MathHelper from '../helpers/MathHelper'\n\nconst StarsDisplay = (props) => (\n  <>\n    { MathHelper.range(1, props.count).map(starId =>\n      <div key={starId} className=\"star\" />\n    )}\n  </>\n)\n\nexport default StarsDisplay;\n","import React from 'react';\nimport MathHelper from '../helpers/MathHelper'\n\nconst useGameState = () => {\n  const [stars, setStars] = React.useState(MathHelper.random(1, 9));\n  const [availableNums, setAvailableNums] = React.useState(MathHelper.range(1, 9));\n  const [candidateNums, setCandidateNums] = React.useState([]);\n  const [secondsLeft, setSecondsLeft] = React.useState(10);\n\n  React.useEffect(() => {\n    if (secondsLeft > 0 && availableNums.length > 0) {\n      const timerId = setTimeout(() => {\n        setSecondsLeft(secondsLeft - 1);\n      }, 1000);\n      return () => { clearTimeout(timerId) };\n    }\n  });\n\n  const setGameState = (newCandidateNums) => {\n    if (MathHelper.sum(newCandidateNums) !== stars) {\n      setCandidateNums(newCandidateNums);\n    } else {\n      const newAvailableNums = availableNums.filter(availableNum => !newCandidateNums.includes(availableNum));\n      setStars(MathHelper.randomSumIn(newAvailableNums, 9));\n      setAvailableNums(newAvailableNums);\n      setCandidateNums([]);\n    }\n  }\n\n  return { stars, availableNums, candidateNums, secondsLeft, setGameState };\n};\n\nexport default useGameState;\n","import React from 'react';\nimport MathHelper from '../helpers/MathHelper'\nimport PlayNumber from './PlayNumber'\nimport PlayAgain from './PlayAgain'\nimport StarsDisplay from './StarsDisplay'\nimport useGameState from '../hooks/useGameState'\n\nconst Game = (props) => {\n  const {\n    stars,\n    availableNums,\n    candidateNums,\n    secondsLeft,\n    setGameState\n  } = useGameState();\n\n  const candidatesAreWrong = () => {\n    return MathHelper.sum(candidateNums) > stars\n  };\n  const gameStatus = availableNums.length === 0\n    ? 'won'\n    : secondsLeft === 0 ? 'lost' : 'active'\n\n  const numberStatus = (number) => {\n    if (!availableNums.includes(number)) {\n      return 'used';\n    }\n    if (candidateNums.includes(number)) {\n      return candidatesAreWrong() ? 'wrong' : 'candidate';\n    }\n    return 'available';\n  }\n\n  const onNumberClick = (number, currentStatus) => {\n    if (gameStatus !== 'active' || currentStatus === 'used' ) { return }\n\n    const newCandidateNums =\n      currentStatus === 'available'\n        ? [...candidateNums, number]\n        : candidateNums.filter(candidateNum => candidateNum !== number);\n\n    setGameState(newCandidateNums);\n  }\n\n  const resetGame = () => {\n    props.startNewGame();\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"help\">\n        Pick 1 or more numbers that sum to the number of stars\n      </div>\n      <div className=\"body\">\n        <div className=\"left\">\n          { gameStatus !== 'active' ?(\n            <PlayAgain onClick={resetGame} gameStatus={gameStatus}/>\n           ) : (\n            <StarsDisplay count={stars} />\n           )}\n        </div>\n        <div className=\"right\">\n          { MathHelper.range(1, 9).map(number =>\n            <PlayNumber\n              key={number}\n              status={numberStatus(number)}\n              number={number}\n              numberClick={onNumberClick}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"timer\">Time Remaining: {secondsLeft}</div>\n    </div>\n  )\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game'\n\nconst StarMatch = () => {\n  const [gameId, setGameId] = React.useState(1);\n  return <Game key={gameId} startNewGame={() => setGameId(gameId +1)}/>\n}\n\nexport default StarMatch;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport StarMatch from './components/StarMatch'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Route exact path={'/'} render={(routerProps) => <StarMatch routerProps={routerProps} />} />\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}